{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KB-PC\\\\Desktop\\\\ReactApp\\\\reddit-favourites\\\\src\\\\SubredditPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubredditPosts = ({\n  subreddit\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTopPosts = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`https://www.reddit.com/r/${subreddit}/hot.json?limit=10`);\n        if (!response.ok) throw new Error('Failed to fetch');\n        const data = await response.json();\n        setPosts(data.data.children.map(child => child.data));\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (subreddit) {\n      fetchTopPosts();\n    }\n  }, [subreddit]);\n  const toggleFavorite = id => {\n    const currentFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    if (currentFavorites.includes(id)) {\n      localStorage.setItem('favorites', JSON.stringify(currentFavorites.filter(favoriteId => favoriteId !== id)));\n    } else {\n      localStorage.setItem('favorites', JSON.stringify([...currentFavorites, id]));\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Top Posts in r/\", subreddit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: post.permalink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [post.title, \" (Score: \", post.score, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleFavorite(post.id),\n          children: JSON.parse(localStorage.getItem('favorites') || '[]').includes(post.id) ? 'Unfavorite' : 'Favorite'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(SubredditPosts, \"HIJp996V7X9K3sFVr5GUNEgO/84=\");\n_c = SubredditPosts;\nexport default SubredditPosts;\nvar _c;\n$RefreshReg$(_c, \"SubredditPosts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SubredditPosts","subreddit","_s","posts","setPosts","loading","setLoading","error","setError","fetchTopPosts","response","fetch","ok","Error","data","json","children","map","child","message","toggleFavorite","id","currentFavorites","JSON","parse","localStorage","getItem","includes","setItem","stringify","filter","favoriteId","fileName","_jsxFileName","lineNumber","columnNumber","post","href","permalink","target","rel","title","score","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KB-PC/Desktop/ReactApp/reddit-favourites/src/SubredditPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SubredditPosts = ({ subreddit }) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchTopPosts = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n            try {\r\n                const response = await fetch(`https://www.reddit.com/r/${subreddit}/hot.json?limit=10`);\r\n                if (!response.ok) throw new Error('Failed to fetch');\r\n                const data = await response.json();\r\n                setPosts(data.data.children.map(child => child.data));\r\n            } catch (error) {\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (subreddit) {\r\n            fetchTopPosts();\r\n        }\r\n    }, [subreddit]);\r\n\r\n    const toggleFavorite = (id) => {\r\n        const currentFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n        if (currentFavorites.includes(id)) {\r\n            localStorage.setItem('favorites', JSON.stringify(currentFavorites.filter(favoriteId => favoriteId !== id)));\r\n        } else {\r\n            localStorage.setItem('favorites', JSON.stringify([...currentFavorites, id]));\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p>Error: {error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Top Posts in r/{subreddit}</h2>\r\n            <ul>\r\n                {posts.map(post => (\r\n                    <li key={post.id}>\r\n                        <a href={post.permalink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {post.title} (Score: {post.score})\r\n                        </a>\r\n                        <button onClick={() => toggleFavorite(post.id)}>\r\n                            {JSON.parse(localStorage.getItem('favorites') || '[]').includes(post.id) ? 'Unfavorite' : 'Favorite'}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubredditPosts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}