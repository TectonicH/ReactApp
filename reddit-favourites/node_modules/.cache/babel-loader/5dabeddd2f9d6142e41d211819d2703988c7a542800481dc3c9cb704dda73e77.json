{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KB-PC\\\\Desktop\\\\ReactApp\\\\reddit-favourites\\\\src\\\\FavouritesLists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesList = () => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      const favoriteIds = JSON.parse(localStorage.getItem('favorites')) || [];\n      const posts = await Promise.all(favoriteIds.map(async id => {\n        const response = await fetch(`https://www.reddit.com/by_id/t3_${id}.json`);\n        const json = await response.json();\n        return {\n          id: json.data.children[0].data.id,\n          title: json.data.children[0].data.title,\n          score: json.data.children[0].data.score,\n          permalink: `https://www.reddit.com${json.data.children[0].data.permalink}`\n        };\n      }));\n      setFavorites(posts);\n    };\n    fetchFavorites();\n  }, []);\n  const removeFavorite = id => {\n    const updatedFavorites = JSON.parse(localStorage.getItem('favorites')).filter(favoriteId => favoriteId !== id);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    setFavorites(favorites.filter(post => post.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Favorite Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: favorites.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: post.permalink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [post.title, \" (Score: \", post.score, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeFavorite(post.id),\n          children: \"Remove from Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoritesList, \"gYNGUuNbE7AW8shO5JZPpsJJ/gw=\");\n_c = FavoritesList;\nexport default FavoritesList;\nvar _c;\n$RefreshReg$(_c, \"FavoritesList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FavoritesList","_s","favorites","setFavorites","fetchFavorites","favoriteIds","JSON","parse","localStorage","getItem","posts","Promise","all","map","id","response","fetch","json","data","children","title","score","permalink","removeFavorite","updatedFavorites","filter","favoriteId","setItem","stringify","post","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KB-PC/Desktop/ReactApp/reddit-favourites/src/FavouritesLists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst FavoritesList = () => {\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFavorites = async () => {\r\n      const favoriteIds = JSON.parse(localStorage.getItem('favorites')) || [];\r\n      const posts = await Promise.all(favoriteIds.map(async (id) => {\r\n        const response = await fetch(`https://www.reddit.com/by_id/t3_${id}.json`);\r\n        const json = await response.json();\r\n        return {\r\n          id: json.data.children[0].data.id,\r\n          title: json.data.children[0].data.title,\r\n          score: json.data.children[0].data.score,\r\n          permalink: `https://www.reddit.com${json.data.children[0].data.permalink}`,\r\n        };\r\n      }));\r\n      setFavorites(posts);\r\n    };\r\n\r\n    fetchFavorites();\r\n  }, []);\r\n\r\n  const removeFavorite = (id) => {\r\n    const updatedFavorites = JSON.parse(localStorage.getItem('favorites')).filter(favoriteId => favoriteId !== id);\r\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n    setFavorites(favorites.filter(post => post.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Favorite Posts</h2>\r\n      <ul>\r\n        {favorites.map(post => (\r\n          <li key={post.id}>\r\n            <a href={post.permalink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {post.title} (Score: {post.score})\r\n            </a>\r\n            <button onClick={() => removeFavorite(post.id)}>Remove from Favorites</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoritesList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}