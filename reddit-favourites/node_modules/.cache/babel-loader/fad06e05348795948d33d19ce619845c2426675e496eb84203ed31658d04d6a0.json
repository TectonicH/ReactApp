{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KB-PC\\\\Desktop\\\\ReactApp\\\\reddit-favourites\\\\src\\\\SubredditPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubredditPosts = ({\n  subreddit\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Helper function to toggle favorite status\n  const toggleFavorite = id => {\n    const currentFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    if (currentFavorites.includes(id)) {\n      localStorage.setItem('favorites', JSON.stringify(currentFavorites.filter(favoriteId => favoriteId !== id)));\n    } else {\n      localStorage.setItem('favorites', JSON.stringify([...currentFavorites, id]));\n    }\n  };\n  useEffect(() => {\n    const fetchTopPosts = async () => {\n      // Fetching logic remains the same\n    };\n    if (subreddit) {\n      fetchTopPosts();\n    }\n  }, [subreddit]);\n\n  // Remainder of the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Top Posts in r/\", subreddit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: post.permalink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [post.title, \" (Score: \", post.score, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleFavorite(post.id),\n          children: JSON.parse(localStorage.getItem('favorites') || '[]').includes(post.id) ? 'Unfavorite' : 'Favorite'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SubredditPosts, \"HIJp996V7X9K3sFVr5GUNEgO/84=\");\n_c = SubredditPosts;\nexport default SubredditPosts;\nvar _c;\n$RefreshReg$(_c, \"SubredditPosts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SubredditPosts","subreddit","_s","posts","setPosts","loading","setLoading","error","setError","toggleFavorite","id","currentFavorites","JSON","parse","localStorage","getItem","includes","setItem","stringify","filter","favoriteId","fetchTopPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","href","permalink","target","rel","title","score","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KB-PC/Desktop/ReactApp/reddit-favourites/src/SubredditPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SubredditPosts = ({ subreddit }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Helper function to toggle favorite status\r\n  const toggleFavorite = (id) => {\r\n    const currentFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    if (currentFavorites.includes(id)) {\r\n      localStorage.setItem('favorites', JSON.stringify(currentFavorites.filter(favoriteId => favoriteId !== id)));\r\n    } else {\r\n      localStorage.setItem('favorites', JSON.stringify([...currentFavorites, id]));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTopPosts = async () => {\r\n      // Fetching logic remains the same\r\n    };\r\n\r\n    if (subreddit) {\r\n      fetchTopPosts();\r\n    }\r\n  }, [subreddit]);\r\n\r\n  // Remainder of the component\r\n  return (\r\n    <div>\r\n      <h2>Top Posts in r/{subreddit}</h2>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>\r\n            <a href={post.permalink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {post.title} (Score: {post.score})\r\n            </a>\r\n            <button onClick={() => toggleFavorite(post.id)}>\r\n              {JSON.parse(localStorage.getItem('favorites') || '[]').includes(post.id) ? 'Unfavorite' : 'Favorite'}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubredditPosts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}